{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/snipper.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","Snipper","class","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,eAyB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,YAGnBlB,Q,+BCnCFmB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,uDACJ,mCADI,cAEsDC,UAAUH,GAFhE,sBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAIA,QCLHO,EAAU,WACrB,OACE,sBAAKC,MAAM,WAAX,UACE,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,qBCLJC,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SACxB,ECH0B,SAACA,GAC3B,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAhBAC,qBAAU,WAER1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBC,YAAW,WAETJ,EAAS,CACPjB,KAAMoB,EACNL,SAAS,MAGV,UAIJ,CAACtB,IAEGuB,EDlB0BM,CAAa7B,GAAjCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAErB,OACE,qCACE,6BAAKtB,IAEJsB,GAAW,cAAC,EAAD,IACZ,qBAAKN,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEkBjBmB,EA7BM,WAEjB,MAAoChD,mBAAU,CAAC,gBAA/C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAEA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQkD,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCd9BgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.55c37806.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        \r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>   \r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport const getGifs = async( category ) => {\r\n    const keyApi = 'bTXwxAJkTQ8Rpcm5XXTrin7pKw34Lo9P';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${keyApi}&q=${ encodeURI(category) }&limit=10`\r\n    \r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // Images\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Snipper = () => {\r\n  return (\r\n    <div class=\"sk-chase\">\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { Snipper } from \"./snipper\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <Snipper /> }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n      \r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n\r\n      }, 3000);\r\n\r\n    });\r\n\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { Fragment, useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Puch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState( ['Dragon Ball']);\r\n\r\n    return ( \r\n        <Fragment >\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            \r\n\r\n            <ul>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </ul>\r\n           \r\n\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// h2= gifexpert app\n// hr\n\n"],"sourceRoot":""}